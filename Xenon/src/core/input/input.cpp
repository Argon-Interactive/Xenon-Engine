#include "input.hpp"
#include <algorithm>
#include <stdexcept>
#include <unordered_map>
#include "glfw3.h"
#include "devTools/logger/logger_core.hpp"



const static std::unordered_map<int, Xenon::Input::Key> c_GLFWKeyToXenonKey = {
	{GLFW_KEY_A, Xenon::Input::Key::A},
	{GLFW_KEY_B, Xenon::Input::Key::B},
	{GLFW_KEY_C, Xenon::Input::Key::C},
	{GLFW_KEY_D, Xenon::Input::Key::D},
	{GLFW_KEY_E, Xenon::Input::Key::E},
	{GLFW_KEY_F, Xenon::Input::Key::F},
	{GLFW_KEY_G, Xenon::Input::Key::G},
	{GLFW_KEY_H, Xenon::Input::Key::H},
	{GLFW_KEY_I, Xenon::Input::Key::I},
	{GLFW_KEY_J, Xenon::Input::Key::J},
	{GLFW_KEY_K, Xenon::Input::Key::K},
	{GLFW_KEY_L, Xenon::Input::Key::L},
	{GLFW_KEY_M, Xenon::Input::Key::M},
	{GLFW_KEY_N, Xenon::Input::Key::N},
	{GLFW_KEY_O, Xenon::Input::Key::O},
	{GLFW_KEY_P, Xenon::Input::Key::P},
	{GLFW_KEY_Q, Xenon::Input::Key::Q},
	{GLFW_KEY_R, Xenon::Input::Key::R},
	{GLFW_KEY_S, Xenon::Input::Key::S},
	{GLFW_KEY_T, Xenon::Input::Key::T},
	{GLFW_KEY_U, Xenon::Input::Key::U},
	{GLFW_KEY_V, Xenon::Input::Key::V},
	{GLFW_KEY_W, Xenon::Input::Key::W},
	{GLFW_KEY_X, Xenon::Input::Key::X},
	{GLFW_KEY_Y, Xenon::Input::Key::Y},
	{GLFW_KEY_Z, Xenon::Input::Key::Z},
	{GLFW_KEY_0, Xenon::Input::Key::Nr0},
	{GLFW_KEY_1, Xenon::Input::Key::Nr1},
	{GLFW_KEY_2, Xenon::Input::Key::Nr2},
	{GLFW_KEY_3, Xenon::Input::Key::Nr3},
	{GLFW_KEY_4, Xenon::Input::Key::Nr4},
	{GLFW_KEY_5, Xenon::Input::Key::Nr5},
	{GLFW_KEY_6, Xenon::Input::Key::Nr6},
	{GLFW_KEY_7, Xenon::Input::Key::Nr7},
	{GLFW_KEY_8, Xenon::Input::Key::Nr8},
	{GLFW_KEY_9, Xenon::Input::Key::Nr9},
	{GLFW_KEY_KP_0, Xenon::Input::Key::Np0},
	{GLFW_KEY_KP_1, Xenon::Input::Key::Np1},
	{GLFW_KEY_KP_2, Xenon::Input::Key::Np2},
	{GLFW_KEY_KP_3, Xenon::Input::Key::Np3},
	{GLFW_KEY_KP_4, Xenon::Input::Key::Np4},
	{GLFW_KEY_KP_5, Xenon::Input::Key::Np5},
	{GLFW_KEY_KP_6, Xenon::Input::Key::Np6},
	{GLFW_KEY_KP_7, Xenon::Input::Key::Np7},
	{GLFW_KEY_KP_8, Xenon::Input::Key::Np8},
	{GLFW_KEY_KP_9, Xenon::Input::Key::Np9},
	{GLFW_KEY_F1, Xenon::Input::Key::F1},
	{GLFW_KEY_F2, Xenon::Input::Key::F2},
	{GLFW_KEY_F3, Xenon::Input::Key::F3},
	{GLFW_KEY_F4, Xenon::Input::Key::F4},
	{GLFW_KEY_F5, Xenon::Input::Key::F5},
	{GLFW_KEY_F6, Xenon::Input::Key::F6},
	{GLFW_KEY_F7, Xenon::Input::Key::F7},
	{GLFW_KEY_F8, Xenon::Input::Key::F8},
	{GLFW_KEY_F9, Xenon::Input::Key::F9},
	{GLFW_KEY_F10, Xenon::Input::Key::F10},
	{GLFW_KEY_F11, Xenon::Input::Key::F11},
	{GLFW_KEY_F12, Xenon::Input::Key::F12},
	{GLFW_KEY_F13, Xenon::Input::Key::F13},
	{GLFW_KEY_F14, Xenon::Input::Key::F14},
	{GLFW_KEY_F15, Xenon::Input::Key::F15},
	{GLFW_KEY_F16, Xenon::Input::Key::F16},
	{GLFW_KEY_F17, Xenon::Input::Key::F17},
	{GLFW_KEY_F18, Xenon::Input::Key::F18},
	{GLFW_KEY_F19, Xenon::Input::Key::F19},
	{GLFW_KEY_F20, Xenon::Input::Key::F20},
	{GLFW_KEY_F21, Xenon::Input::Key::F21},
	{GLFW_KEY_F22, Xenon::Input::Key::F22},
	{GLFW_KEY_F23, Xenon::Input::Key::F23},
	{GLFW_KEY_F24, Xenon::Input::Key::F24},
	{GLFW_KEY_F25, Xenon::Input::Key::F25},
	{GLFW_KEY_SPACE, Xenon::Input::Key::Space},
	{GLFW_KEY_ENTER, Xenon::Input::Key::Enter},
	{GLFW_KEY_LEFT_SHIFT, Xenon::Input::Key::Shift},
	{GLFW_KEY_RIGHT_SHIFT, Xenon::Input::Key::Right_Shift},
	{GLFW_KEY_LEFT_CONTROL, Xenon::Input::Key::Control},
	{GLFW_KEY_RIGHT_CONTROL, Xenon::Input::Key::Right_Control},
	{GLFW_KEY_LEFT_ALT, Xenon::Input::Key::Alt},
	{GLFW_KEY_RIGHT_ALT, Xenon::Input::Key::Alt_Gr},
	{GLFW_KEY_CAPS_LOCK, Xenon::Input::Key::Caps_Lock},
	{GLFW_KEY_TAB, Xenon::Input::Key::Tab},
	{GLFW_KEY_ESCAPE, Xenon::Input::Key::Esc},
	{GLFW_KEY_LEFT_SUPER, Xenon::Input::Key::Windows},
	{GLFW_KEY_LEFT_SUPER, Xenon::Input::Key::Command},
	{GLFW_KEY_LEFT_SUPER, Xenon::Input::Key::Super},
	{GLFW_KEY_LEFT_BRACKET, Xenon::Input::Key::Left_Braket},
	{GLFW_KEY_RIGHT_BRACKET, Xenon::Input::Key::Right_Braket},
	{GLFW_KEY_SEMICOLON, Xenon::Input::Key::Semicolon},
	{GLFW_KEY_APOSTROPHE, Xenon::Input::Key::Apostrophe},
	{GLFW_KEY_BACKSLASH, Xenon::Input::Key::Backslash},
	{GLFW_KEY_COMMA, Xenon::Input::Key::Comma},
	{GLFW_KEY_PERIOD, Xenon::Input::Key::Period},
	{GLFW_KEY_SLASH, Xenon::Input::Key::Slash},
	{GLFW_KEY_MINUS, Xenon::Input::Key::Dash},
	{GLFW_KEY_EQUAL, Xenon::Input::Key::Equals},
	{GLFW_KEY_GRAVE_ACCENT, Xenon::Input::Key::Back_Quote},
	{GLFW_KEY_UP, Xenon::Input::Key::Up},
	{GLFW_KEY_DOWN, Xenon::Input::Key::Down},
	{GLFW_KEY_LEFT, Xenon::Input::Key::Left},
	{GLFW_KEY_RIGHT, Xenon::Input::Key::Right},
	{GLFW_KEY_PRINT_SCREEN, Xenon::Input::Key::Print_Screen},
	{GLFW_KEY_INSERT, Xenon::Input::Key::Insert},
	{GLFW_KEY_DELETE, Xenon::Input::Key::Delete},
	{GLFW_KEY_HOME, Xenon::Input::Key::Home},
	{GLFW_KEY_END, Xenon::Input::Key::End},
	{GLFW_KEY_PAGE_UP, Xenon::Input::Key::PageUp},
	{GLFW_KEY_PAGE_DOWN, Xenon::Input::Key::PageDown},
	{GLFW_KEY_PAUSE, Xenon::Input::Key::Pause},
	{GLFW_KEY_KP_DIVIDE, Xenon::Input::Key::Np_Devide},
	{GLFW_KEY_KP_MULTIPLY, Xenon::Input::Key::Np_Multiply},
	{GLFW_KEY_KP_SUBTRACT, Xenon::Input::Key::Np_Minus},
	{GLFW_KEY_KP_ADD, Xenon::Input::Key::Np_Add},
	{GLFW_KEY_KP_ENTER, Xenon::Input::Key::Np_Enter},
	{GLFW_KEY_KP_DECIMAL, Xenon::Input::Key::Np_Decimal},
	{GLFW_KEY_SCROLL_LOCK, Xenon::Input::Key::Scroll_lock},
	{GLFW_KEY_NUM_LOCK, Xenon::Input::Key::Num_lock},
	{GLFW_KEY_BACKSPACE, Xenon::Input::Key::Backspace},
};



bool Xenon::Input::s_singletonCheck = false;

Xenon::Input::Input() {
	if(s_singletonCheck) throw std::runtime_error("Xenon::Input is a singleton and was created twice");
	s_singletonCheck = true;
	std::fill_n(m_pressedMap, s_keyAmmount, false);
	std::fill_n(m_relesedMap, s_keyAmmount, false);
	std::fill_n(m_heldMap, s_keyAmmount, false);
}

